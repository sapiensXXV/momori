.audioContentContainer {
    display: flex;
    flex-direction: column;
    row-gap: 5px;
    justify-content: center;
    align-items: center;
}

.audioApplyButton {
    width: 80px;
    height: 80px;
    border: 2px dashed #ccc;
    border-radius: 40px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}

.audioApplyButton > div {
    display: flex;
    justify-content: center;
    align-items: center;
}

.audioApplyText {
    font-family: Pretendard-Bold, serif;
    font-size: 0.8rem;
}

.audioApplyButton > svg {
    width: 25px;
    height: 25px;
}

.audioButtonContainer {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    column-gap: 5px;
    width: 100%;
}

.audioButton {
    background-color: var(--color-main-button-light);
    /*width: 18px;*/
    width: 100%;
    height: 18px;
    padding: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    border-radius: 4px;
}

/* 버튼에 회전하는 배경 효과를 주기 위한 클래스 */
.rotatingButton {
    position: relative;
    overflow: hidden;
    /* 배경색은 기본 버튼 스타일에 맞게 설정 */
}

/* 버튼의 배경으로 동작하는 pseudo-element */
.rotatingButton::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* 시계방향 회전을 위한 conic-gradient */
    /*background: conic-gradient(red, yellow, green, blue, red);*/
    background: black;
    z-index: -1;
    /* 애니메이션 지속시간은 CSS 커스텀 프로퍼티 --duration를 통해 설정 */
    animation: rotateAnimation var(--duration, 10s) linear forwards;
}

/* 0도에서 360도까지 회전 */
@keyframes rotateAnimation {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.audioButton > svg {
    height: 20px;
}